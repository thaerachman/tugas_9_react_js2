{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","buka","munculPopover","Popover","title","className","Row","Col","Navbar","bg","variant","Brand","href","Nav","Item","Link","Form","inline","FormControl","type","placeholder","Button","Container","Breadcrumb","active","Spinner","animation","Tabs","Tab","eventKey","Table","ProgressBar","animated","now","label","Pagination","First","Prev","Ellipsis","Next","Last","OverlayTrigger","trigger","placement","overlay","onClick","setState","Collapse","in","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab1acd18.chunk.js","sourcesContent":["// import './App.css';\nimport './css/bootstrap.min.css'\nimport React, {Component} from 'react';\nimport {Container,\n  Navbar,\n  Nav,\n  Form,\n  FormControl,\n  Button,\n  Breadcrumb,\n  Row,\n  Col,\n  OverlayTrigger,\n  Popover,\n  Collapse,\n  Table,\nPagination,\nTabs,\nTab,\nProgressBar,\nSpinner} from 'react-bootstrap'\n\n  class App extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        buka:true,\n      }\n\n    }\n    render () {\n      const munculPopover=<Popover title =\"Informasi Website\">Website ini dibuat untuk memudahkan dalam pencarian informasi terkini tentang berita olahraga</Popover>\n      return (\n        <div className=\"App\">\n        <Row>\n        <Col>\n        <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Akses Sport </Navbar.Brand>\n        <Nav>\n        <Nav.Item>\n        <Nav.Link href=\"/\">Home</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n        <Nav.Link href=\"/\">Berita</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n        <Nav.Link href=\"/\">Live Score</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n        <Nav.Link href=\"/\">Piala & Liga</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n        <Nav.Link href=\"/\">Transfer Pemain</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n        <Nav.Link href=\"/\">Tim</Nav.Link>\n        </Nav.Item>\n\n        <Col>\n        <Form inline>\n        <FormControl type=\"Text\" placeholder=\"Search\" />\n        <Button variant=\"outline-info\">Search</Button>\n        </Form>\n        </Col>\n        </Nav>\n        </Navbar>\n        </Col>\n\n        </Row>\n\n\n\n        <Container>\n        <Row>\n        <Col></Col>\n        <Col></Col>\n        <Col>\n        <Breadcrumb>\n        <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\n        <Breadcrumb.Item href=\"/\">Liga Inggris</Breadcrumb.Item>\n        <Breadcrumb.Item active>Transfer Pemain</Breadcrumb.Item>\n        </Breadcrumb>\n        </Col>\n        </Row>\n        <Row>\n        <h1>Rumor Transfer pemain</h1>\n        <Spinner animation=\"border\" variant=\"success\"/>\n        <Spinner animation=\"grow\" variant=\"success\"/>\n        </Row>\n\n        <Tabs>\n        <Tab eventKey=\"Semua Transfer\" title=\"Semua Transfer\"></Tab>\n        <Tab eventKey=\"Liga Primer Inggris\" title=\"Liga Primer Inggris\"></Tab>\n        <Tab eventKey=\"Seri A\" title=\"Seri A\"></Tab>\n        <Tab eventKey=\"Divisi Primera\" title=\"Divisi Primera\"></Tab>\n        <Tab eventKey=\"Bundesliga\" title=\"Bundesliga\"></Tab>\n        <Tab eventKey=\"Liga 1 Indonesia\" title=\"Liga 1 Indonesia\"></Tab>\n\n        </Tabs>\n\n<br />\n\n        <Table>\n        <thead>\n          <tr>\n              <th> # </th>\n              <th> Nama Pemain </th>\n              <th> Tim </th>\n              <th> Transfer </th>\n              <th> Proses Transfer </th>\n          </tr>\n        </thead>\n\n        <tbody>\n        <tr>\n        <td>1</td>\n        <td>MAROUNE FELLAINI</td>\n        <td>MANCHESTER UNITED</td>\n        <td>SHANDONG LUNENG</td>\n        <td><ProgressBar animated now={85} label=\"85%\" /></td>\n        </tr>\n        <tr>\n        <td>2</td>\n        <td>LUIS NANI</td>\n        <td>SPORTING CP</td>\n        <td>ORLANDOO CITY</td>\n        <td><ProgressBar animated now={55} label=\"55%\" /></td>\n        </tr>\n        <tr>\n        <td>3</td>\n        <td>MAREK HAMSIK</td>\n        <td>NAPOLI</td>\n        <td>DALIAN YIFANG</td>\n        <td><ProgressBar animated now={95} label=\"95%\" /></td>\n        </tr>\n        <tr>\n        <td>4</td>\n        <td>SARDAR AZMOUN</td>\n        <td>RUBIN KAZAN</td>\n        <td>ZENIT ST PETERSBURG</td>\n        <td><ProgressBar animated now={100} label=\"100%\" /></td>\n        </tr>\n        <tr>\n        <td>5</td>\n        <td>MICHY BATSHUAYI</td>\n        <td>CHELSEA</td>\n        <td>CRYSTAL PALACE</td>\n        <td><ProgressBar animated now={50} label=\"50%\" /></td>\n        </tr>\n        <tr>\n        <td>6</td>\n        <td>LUCAS PIAZON</td>\n        <td>CHELSEA</td>\n        <td>CHIEVO</td>\n        <td><ProgressBar animated now={100} label=\"100%\" /></td>\n        </tr>\n\n\n        </tbody>\n\n        </Table>\n\n        <Pagination>\n        <Pagination.First />\n        <Pagination.Prev />\n        <Pagination.Item active>{1}</Pagination.Item>\n        <Pagination.Ellipsis />\n        <Pagination.Item>{10}</Pagination.Item>\n        <Pagination.Item>{11}</Pagination.Item>\n        <Pagination.Item>{12}</Pagination.Item>\n        <Pagination.Item>{13}</Pagination.Item>\n        <Pagination.Item>{14}</Pagination.Item>\n        <Pagination.Ellipsis />\n        <Pagination.Item>{20}</Pagination.Item>\n        <Pagination.Next />\n        <Pagination.Last />\n        </Pagination>\n\n\n\n\n        <Row>\n        <Col>\n        <OverlayTrigger\n        trigger=\"click\"\n        placement=\"right\"\n        overlay={munculPopover}>\n        <Button variant=\"primary\">Informasi </Button>\n        </OverlayTrigger>\n\n        <Button variant=\"primary\" onClick={()=>this.setState({buka: !this.state.buka})}>Versi Website </Button>\n        <Collapse in={this.state.buka}>\n        <p>Akses Sport V1.0</p>\n        </Collapse>\n        </Col>\n        </Row>\n\n        </Container>\n\n        </div>\n      );\n    }\n  }\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}